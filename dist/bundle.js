/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const app = window;\r\n\r\napp.onload = ()=>{\r\n\r\n    function getID(id){\r\n        let result = document.getElementById(id);\r\n        return result;\r\n    }\r\n\r\n    const btn = getID('sendBtn');\r\n\r\n    const requester = {\r\n        name: ()=>{\r\n            let rName = getID('rName');\r\n            return rName;\r\n        },\r\n        divName: ()=>{\r\n            let rDivName = getID('rNameDiv');\r\n            return rDivName;\r\n        },\r\n        cpf: ()=>{\r\n            let rDoc = getID('rDoc');\r\n            return rDoc;\r\n        },\r\n        divCpf: ()=>{\r\n            let rDivDoc = getID('rDocDiv');\r\n            return rDivDoc;\r\n        },\r\n        email: ()=>{\r\n            let rEmail = getID('rEmail');\r\n            return rEmail;\r\n        },\r\n        divEmail: ()=>{\r\n            let rDivEmail = getID('rEmailDiv');\r\n            return rDivEmail;\r\n        },\r\n        phone: ()=>{\r\n            let rPhone = getID('rPhone');\r\n            return rPhone;\r\n        },\r\n        divPhone: ()=>{\r\n            let rDivPhone = getID('rPhoneDiv');\r\n            return rDivPhone;\r\n        },\r\n        street: ()=>{\r\n            let rStreet = getID('rStreet');\r\n            return rStreet;\r\n        },\r\n        divStreet: ()=>{\r\n            let rDivStreet = getID('rStreetDiv');\r\n            return rDivStreet;\r\n        },\r\n        number: ()=>{\r\n            let rNumber = getID('rNumber');\r\n            return rNumber;\r\n        },\r\n        divNumber: ()=>{\r\n            let rDivNumber = getID('rNumberDiv');\r\n            return rDivNumber;\r\n        },\r\n        district: ()=>{\r\n            let rDistrict = getID('rDistrict');\r\n            return rDistrict;\r\n        },\r\n        divDistrict: ()=>{\r\n            let rDivDistrict = getID('rDistrictDiv');\r\n            return rDivDistrict;\r\n        },\r\n        city: ()=>{\r\n            let rCity = getID('rCity');\r\n            return rCity;\r\n        },\r\n        divCity: ()=>{\r\n            let rDivCity = getID('rCityDiv');\r\n            return rDivCity;\r\n        },\r\n        state: ()=>{\r\n            let reqState = getID('rState');\r\n            return reqState;\r\n        },\r\n        divState: ()=>{\r\n            let rDivState = getID('rStateDiv');\r\n            return rDivState;\r\n        },\r\n        postalCode: ()=>{\r\n            let rPostalCode = getID('rPostalCode');\r\n            return rPostalCode;\r\n        },\r\n        divPostalCode: ()=>{\r\n            let rDivPostalCode = getID('rPostalCodeDiv');\r\n            return rDivPostalCode;\r\n        },\r\n        report: ()=>{\r\n            let report = getID('reportCase');\r\n            return report;\r\n        },\r\n        divReport: ()=>{\r\n            let divReport = getID('divReportCase');\r\n            return divReport;\r\n        },\r\n        request: ()=>{\r\n            let request = getID('request');\r\n            return request;\r\n        },\r\n        divRequest: ()=>{\r\n            let divRequest = getID('divRequest');\r\n            return divRequest;\r\n        },\r\n        value: ()=>{\r\n            let value = getID('value');\r\n            return value;\r\n        },\r\n        divValue: ()=>{\r\n            let divValue = getID('divValue');\r\n            return divValue;\r\n        }\r\n    }\r\n\r\n    const requested = {\r\n        name: ()=>{\r\n            let rdName = getID('rdName');\r\n            return rdName;\r\n        },\r\n        divName: ()=>{\r\n            let rdDivName = getID('rdNameDiv');\r\n            return rdDivName;\r\n        },\r\n        cpf: ()=>{\r\n            let rdDoc = getID('rdDoc');\r\n            return rdDoc;\r\n        },\r\n        divCpf: ()=>{\r\n            let rdDivCpf = getID('rdDocDiv');\r\n            return rdDivCpf;\r\n        },\r\n        email: ()=>{\r\n            let rdEmail = getID('rdEmail');\r\n            return rdEmail;\r\n        },\r\n        divEmail: ()=>{\r\n            let rdDivEmail = getID('rdEmailDiv');\r\n            return rdDivEmail;\r\n        },\r\n        phone: ()=>{\r\n            let rdPhone = getID('rdPhone');\r\n            return rdPhone;\r\n        },\r\n        divPhone: ()=>{\r\n            let rdDivPhone = getID('rdPhoneDiv');\r\n            return rdDivPhone;\r\n        },\r\n        street: ()=>{\r\n            let rdStreet = getID('rdStreet');\r\n            return rdStreet;\r\n        },\r\n        divStreet: ()=>{\r\n            let rdDivStreet = getID('rdStreetDiv');\r\n            return rdDivStreet;\r\n        },\r\n        number: ()=>{\r\n            let rdNumber = getID('rdNumber');\r\n            return rdNumber;\r\n        },\r\n        divNumber: ()=>{\r\n            let rdDivNumber = getID('rdNumberDiv');\r\n            return rdDivNumber;\r\n        },\r\n        district: ()=>{\r\n            let rdDistrict = getID('rdDistrict');\r\n            return rdDistrict;\r\n        },\r\n        divDistrict: ()=>{\r\n            let rdDivDistrict = getID('rdDistrictDiv');\r\n            return rdDivDistrict;\r\n        },\r\n        city: ()=>{\r\n            let rdCity = getID('rdCity');\r\n            return rdCity;\r\n        },\r\n        divCity: ()=>{\r\n            let rdDivCity = getID('rdCityDiv');\r\n            return rdDivCity;\r\n        },\r\n        state: ()=>{\r\n            let rdState = getID('rdState');\r\n            return rdState;\r\n        },\r\n        divState: ()=>{\r\n            let rdDivState = getID('rdStateDiv');\r\n            return rdDivState; \r\n        },\r\n        postalCode: ()=>{\r\n            let rdPostalCode = getID('rdPostalCode');\r\n            return rdPostalCode;\r\n        },\r\n        divPostalCode: ()=>{\r\n            let rdDivPostalCode = getID('rdPostalCodeDiv');\r\n            return rdDivPostalCode;\r\n        }\r\n    }\r\n\r\n    const targets = {\r\n        requesterName: ()=>{\r\n            let requesterName = getID('requesterNameTarget');\r\n            return requesterName;\r\n        },\r\n        requesterAddress: ()=>{\r\n            let requesterAddress = getID('requesterAddressTarget');\r\n            return requesterAddress;\r\n        },\r\n        requesterDocument: ()=>{\r\n            let requesterDocument = getID('requesterDocTarget');\r\n            return requesterDocument;\r\n        },\r\n        requesterEmail: ()=>{\r\n            let requesterEmail = getID('requesterEmailTarget');\r\n            return requesterEmail;\r\n        },\r\n        requesterPhone: ()=>{\r\n            let requesterPhone = getID('requesterPhoneTarget');\r\n            return requesterPhone;\r\n        },\r\n        requiredName: ()=>{\r\n            let requiredName = getID('requiredNameTarget');\r\n            return requiredName;\r\n        },\r\n        requiredAddress: ()=>{\r\n            let requiredAddress = getID('requiredAddressTarget');\r\n            return requiredAddress;\r\n        },\r\n        requiredDocument: ()=>{\r\n            let requiredDocument = getID('requiredDocTarget');\r\n            return requiredDocument;\r\n        },\r\n        requiredEmail: ()=>{\r\n            let requiredEmail = getID('requiredEmailTarget');\r\n            return requiredEmail;\r\n        },\r\n        requiredPhone: ()=>{\r\n            let requiredPhone = getID('requiredPhoneTarget');\r\n            return requiredPhone;\r\n        },\r\n        reportTarget: ()=>{\r\n            let reportTarget = getID('reportTarget');\r\n            return reportTarget;\r\n        },\r\n        requestTextTarget: ()=>{\r\n            let requestTextTarget = getID('requestTextTarget');\r\n            return requestTextTarget;\r\n        },\r\n        requestsTarget: ()=>{\r\n            let requestsTarget = getID('requestsTarget');\r\n            return requestsTarget;\r\n            // append <li> tag\r\n        },\r\n        valueTarget: ()=>{\r\n            let valueTarget = getID('valueTarget');\r\n            return valueTarget;\r\n        },\r\n        signerName: ()=>{\r\n            let signerName = getID('signerNameTarget');\r\n            return signerName;\r\n        },\r\n        signerDocument: ()=>{\r\n            let signerDocument = getID('signerDocument');\r\n            return signerDocument;\r\n        },\r\n        dateTarget: ()=>{\r\n            let dateTarget = getID('dateTarget');\r\n            return dateTarget;\r\n        },\r\n        documentDiv: ()=>{\r\n            let documentDiv = getID('toPrint');\r\n            return documentDiv;\r\n        }\r\n    }\r\n\r\n    function validateValues(){\r\n        let isValid = true;\r\n\r\n        // NOME\r\n        let rName = requester.name();\r\n        let rDivName = requester.divName();\r\n        if (rName.value !== ''){\r\n            rDivName.classList.remove('is-invalid');\r\n            rName.classList.remove('is-invalid');\r\n            console.log(rName.value);\r\n        }else {\r\n            rDivName.classList.add('is-invalid');\r\n            rName.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdName = requested.name();\r\n        let rdDivName = requested.divName();\r\n        if (rdName.value !== ''){\r\n            rdDivName.classList.remove('is-invalid');\r\n            rdName.classList.remove('is-invalid');\r\n            console.log(rdName.value);\r\n        }else {\r\n            rdDivName.classList.add('is-invalid');\r\n            rdName.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n            isValid = false;\r\n        }\r\n\r\n        // CPF\r\n        let rCpf = requester.cpf();\r\n        let rDivCpf = requester.divCpf();\r\n        if (rCpf.value !== ''){\r\n            rCpf.classList.remove('is-invalid');\r\n            rDivCpf.classList.remove('is-invalid');\r\n            console.log(rCpf.value);\r\n        }else {\r\n            rDivCpf.classList.add('is-invalid');\r\n            rCpf.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdCpf = requested.cpf();\r\n        let rdDivCpf = requested.divCpf();\r\n        if (rdCpf.value !== ''){\r\n            rdCpf.classList.remove('is-invalid');\r\n            rdDivCpf.classList.remove('is-invalid');\r\n            console.log(rCpf.value);\r\n        }else {\r\n            rdDivCpf.classList.add('is-invalid');\r\n            rdCpf.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n            isValid = false;\r\n        }\r\n\r\n        // EMAIL\r\n        let rEmail = requester.email();\r\n        let rDivEmail = requester.divEmail();\r\n        if (rEmail.value !== ''){\r\n            rEmail.classList.remove('is-invalid');\r\n            rDivEmail.classList.remove('is-invalid');\r\n            console.log(rEmail.value);\r\n        }else {\r\n            rDivEmail.classList.add('is-invalid');\r\n            rEmail.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdEmail = requested.email();\r\n        let rdDivEmail = requested.divEmail();\r\n        if (rdEmail.value !== ''){\r\n            rdEmail.classList.remove('is-invalid');\r\n            rdDivEmail.classList.remove('is-invalid');\r\n            console.log(rEmail.value);\r\n        }else {\r\n            rdDivEmail.classList.add('is-invalid');\r\n            rdEmail.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n            isValid = false;\r\n        }\r\n\r\n        // TELEFONE\r\n        let rPhone = requester.phone();\r\n        let rDivPhone = requester.divPhone();\r\n        if (rPhone.value !== ''){\r\n            rPhone.classList.remove('is-invalid');\r\n            rDivPhone.classList.remove('is-invalid');\r\n            console.log(rPhone.value);\r\n        }else {\r\n            rDivPhone.classList.add('is-invalid');\r\n            rPhone.classList.add('is-invalid');\r\n            app.scrollTo(180, 180);\r\n            isValid = false;\r\n        }\r\n        let rdPhone = requested.phone();\r\n        let rdDivPhone = requested.divPhone();\r\n        if (rdPhone.value !== ''){\r\n            rdPhone.classList.remove('is-invalid');\r\n            rdDivPhone.classList.remove('is-invalid');\r\n            console.log(rdPhone.value);\r\n        }else {\r\n            rdDivPhone.classList.add('is-invalid');\r\n            rdPhone.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n            isValid = false;\r\n        }\r\n\r\n        //RUA\r\n        let rStreet = requester.street();\r\n        let rDivStreet = requester.divStreet();\r\n        if (rStreet.value !== ''){\r\n            rStreet.classList.remove('is-invalid');\r\n            rDivStreet.classList.remove('is-invalid');\r\n            console.log(rStreet.value);\r\n        }else {\r\n            rDivStreet.classList.add('is-invalid');\r\n            rStreet.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n            isValid = false;\r\n        }\r\n        let rdStreet = requested.street();\r\n        let rdDivStreet = requested.divStreet();\r\n        if (rdStreet.value !== ''){\r\n            rdStreet.classList.remove('is-invalid');\r\n            rdDivStreet.classList.remove('is-invalid');\r\n            console.log(rdStreet.value);\r\n        }else {\r\n            rdDivStreet.classList.add('is-invalid');\r\n            rdStreet.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n            isValid = false;\r\n        }\r\n\r\n        // NUMERO\r\n        let rNumber = requester.number();\r\n        let rDivNumber = requester.divNumber();\r\n        if (rNumber.value !== ''){\r\n            rNumber.classList.remove('is-invalid');\r\n            rDivNumber.classList.remove('is-invalid');\r\n            console.log(rNumber.value);\r\n        }else {\r\n            rDivNumber.classList.add('is-invalid');\r\n            rNumber.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n            isValid = false;\r\n        }\r\n        let rdNumber = requested.number();\r\n        let rdDivNumber = requested.divNumber();\r\n        if (rdNumber.value !== ''){\r\n            rdNumber.classList.remove('is-invalid');\r\n            rdDivNumber.classList.remove('is-invalid');\r\n            console.log(rdNumber.value);\r\n        }else {\r\n            rdDivNumber.classList.add('is-invalid');\r\n            rdNumber.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n            isValid = false;\r\n        }\r\n\r\n        // BAIRRO\r\n        let rDistrict = requester.district();\r\n        let rDivDistrict = requester.divDistrict();\r\n        if (rDistrict.value !== ''){\r\n            rDistrict.classList.remove('is-invalid');\r\n            rDivDistrict.classList.remove('is-invalid');\r\n            console.log(rDistrict.value);\r\n        }else {\r\n            rDivDistrict.classList.add('is-invalid');\r\n            rDistrict.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n            isValid = false;\r\n        }\r\n        let rdDistrict = requested.district();\r\n        let rdDivDistrict = requested.divDistrict();\r\n        if (rdDistrict.value !== ''){\r\n            rdDistrict.classList.remove('is-invalid');\r\n            rdDivDistrict.classList.remove('is-invalid');\r\n            console.log(rdDistrict.value);\r\n        }else {\r\n            rdDivDistrict.classList.add('is-invalid');\r\n            rdDistrict.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n            isValid = false;\r\n        }\r\n\r\n        // CIDADE\r\n        let rCity = requester.city();\r\n        let rDivCity = requester.divCity();\r\n        if (rCity.value !== ''){\r\n            rCity.classList.remove('is-invalid');\r\n            rDivCity.classList.remove('is-invalid');\r\n            console.log(rCity.value);\r\n        }else {\r\n            rDivCity.classList.add('is-invalid');\r\n            rCity.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n            isValid = false;\r\n        }\r\n        let rdCity = requested.city();\r\n        let rdDivCity = requested.divCity();\r\n        if (rdCity.value !== ''){\r\n            rdCity.classList.remove('is-invalid');\r\n            rdDivCity.classList.remove('is-invalid');\r\n            console.log(rdCity.value);\r\n        }else {\r\n            rdDivCity.classList.add('is-invalid');\r\n            rdCity.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n            isValid = false;\r\n        }\r\n\r\n        // CEP\r\n        let rPostalCode = requester.postalCode();\r\n        let rDivPostalCode = requester.divPostalCode();\r\n        if (rPostalCode.value !== ''){\r\n            rPostalCode.classList.remove('is-invalid');\r\n            rDivPostalCode.classList.remove('is-invalid');\r\n            console.log(rPostalCode.value);\r\n        }else {\r\n            rDivPostalCode.classList.add('is-invalid');\r\n            rPostalCode.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n            isValid = false;\r\n        }\r\n        let rdPostalCode = requested.postalCode();\r\n        let rdDivPostalCode = requested.divPostalCode();\r\n        if (rdPostalCode.value !== ''){\r\n            rdPostalCode.classList.remove('is-invalid');\r\n            rdDivPostalCode.classList.remove('is-invalid');\r\n            console.log(rdPostalCode.value);\r\n        }else {\r\n            rdDivPostalCode.classList.add('is-invalid');\r\n            rdPostalCode.classList.add('is-invalid');\r\n            app.scrollTo(2200, 2200);\r\n            isValid = false;\r\n        }\r\n\r\n        // RELATO DO CASO\r\n        let report = requester.report();\r\n        let divReport = requester.divReport();\r\n        if (report.value !== ''){\r\n            report.classList.remove('is-invalid');\r\n            divReport.classList.remove('is-invalid');\r\n            console.log(report.value);\r\n        }else {\r\n            divReport.classList.add('is-invalid');\r\n            report.classList.add('is-invalid');\r\n            app.scrollTo(900, 900);\r\n            isValid = false;\r\n        }\r\n\r\n        // DOS PEDIDOS\r\n        let request = requester.request();\r\n        let divRequest = requester.divRequest();\r\n        if (request.value !== ''){\r\n            request.classList.remove('is-invalid');\r\n            divRequest.classList.remove('is-invalid');\r\n            console.log(request.value);\r\n        }else {\r\n            divRequest.classList.add('is-invalid');\r\n            request.classList.add('is-invalid');\r\n            app.scrollTo(1100, 1100);\r\n            isValid = false;\r\n        }\r\n\r\n        // VALOR DA CAUSA\r\n        let value = requester.value();\r\n        let divValue = requester.divValue();\r\n        if (value.value !== ''){\r\n            value.classList.remove('is-invalid');\r\n            divValue.classList.remove('is-invalid');\r\n            console.log(value.value);\r\n        }else {\r\n            divValue.classList.add('is-invalid');\r\n            value.classList.add('is-invalid');\r\n            app.scrollTo(1200, 1200);\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    btn.onclick = ()=>{\r\n        validateValues();\r\n        if (validateValues()){\r\n            alert('valores válidos');\r\n            \r\n            // RECLAMANTE\r\n            let requesterNameTarget = targets.requesterName();\r\n            let requesterNameValue = requester.name().value;\r\n            requesterNameTarget.innerText = requesterNameValue.toUpperCase();\r\n            \r\n            // ENDEREÇO\r\n            let requesterStreet = requester.street().value;\r\n            let requesterNumber = requester.number().value;\r\n            let requesterCity = requester.city().value;\r\n            // let requesterState = requester.state().value;\r\n            let requesterPostalCode = requester.postalCode().value;\r\n            let requesterAddress = 'R: ' + requesterStreet.toUpperCase() + ' ' + 'N: ' + requesterNumber.toUpperCase() + ' ' + requesterCity.toUpperCase() + '/' + 'PR' + ' CEP: ' + requesterPostalCode;\r\n            let requesterAddressTarget = targets.requesterAddress();\r\n            requesterAddressTarget.innerText = requesterAddress;\r\n\r\n            // CPF/CNPJ\r\n            let requesterDocument = requester.cpf().value;\r\n            let requesterDocumentTarget = targets.requesterDocument();\r\n            requesterDocumentTarget.innerText = requesterDocument;\r\n\r\n            // EMAIL\r\n            let requesterEmail = requester.email().value;\r\n            let requesterEmailTarget = targets.requesterEmail();\r\n            requesterEmailTarget.innerText = requesterEmail;\r\n\r\n            // WHATSAPP TELEFONE\r\n            let requesterPhone = requester.phone().value;\r\n            let requesterPhoneTarget = targets.requesterPhone();\r\n            requesterPhoneTarget.innerText = requesterPhone;\r\n\r\n            // RECLAMADO\r\n            let requiredName = requested.name().value;\r\n            let requiredNameTarget = targets.requiredName();\r\n            requiredNameTarget.innerText = requiredName.toUpperCase();\r\n\r\n            // ENDEREÇO\r\n            let requiredStreet = requested.street().value;\r\n            let requiredNumber = requested.number().value;\r\n            let requiredCity = requested.city().value;\r\n            // let requiredState = requested.state().value;\r\n            let requiredPostalCode = requested.postalCode().value;\r\n            let requiredAddress = 'R: '+requiredStreet.toUpperCase()+' N: '+requiredNumber+' '+requiredCity.toUpperCase()+'/PR'+' CEP: '+requiredPostalCode;\r\n            let requiredAddressTarget = targets.requiredAddress();\r\n            requiredAddressTarget.innerText = requiredAddress;\r\n\r\n            // CPF/CNPJ\r\n            let requiredDocument = requested.cpf().value;\r\n            let requiredDocumentTarget = targets.requiredDocument();\r\n            requiredDocumentTarget.innerText = requiredDocument;\r\n\r\n            // EMAIL\r\n            let requiredEmail = requested.email().value;\r\n            let requiredEmailTarget = targets.requiredEmail();\r\n            requiredEmailTarget.innerText = requiredEmail;\r\n\r\n            // WHATSAPP TELEFONE\r\n            let requiredPhone = requested.phone().value;\r\n            let requiredPhoneTarget = targets.requiredPhone();\r\n            requiredPhoneTarget.innerText = requiredPhone;\r\n\r\n            // DOS FATOS\r\n            let report = requester.report().value;\r\n            let reportTarget = targets.reportTarget();\r\n            reportTarget.innerText = report;\r\n\r\n            // DOS PEDIDOS\r\n            let request = requester.request().value;\r\n            let requestTarget = targets.requestTextTarget();\r\n            requestTarget.innerText = request;\r\n\r\n            // VALOR DA CAUSA\r\n            let causeValue = requester.value().value;\r\n            let causeValueTarget = targets.valueTarget();\r\n            causeValueTarget.innerText = causeValue;\r\n\r\n            // DATA\r\n            let date = new Date();\r\n            let day = date.getDate();\r\n            let month = date.getMonth();\r\n            let months = [\r\n                'Janeiro',\r\n                'Fevereiro',\r\n                'Março',\r\n                'Abril',\r\n                'Maio',\r\n                'Junho',\r\n                'Julho',\r\n                'Agosto',\r\n                'Setembro',\r\n                'Outubro',\r\n                'Novembro',\r\n                'Dezembro'\r\n            ];\r\n            let monthName = months[month];\r\n            let formatedDay = day < 10 ? '0' + day : day;\r\n            let year = date.getFullYear();\r\n            let today = `Itapoá (SC), ${formatedDay} de ${monthName} de ${year}.`;\r\n            let dateTarget = targets.dateTarget();\r\n            dateTarget.innerText = today;\r\n\r\n            // ASSINANTE\r\n            let signerName = requester.name().value;\r\n            let signerDocument = requester.cpf().value;\r\n            let signerNameTarget = targets.signerName();\r\n            let signerDocumentTarget = targets.signerDocument();\r\n\r\n            signerNameTarget.innerText = signerName.toUpperCase();\r\n            signerDocumentTarget.innerText = signerDocument;\r\n        }\r\n    }\r\n    const printBtn = getID('printBtn');\r\n    const toPrint = getID('toPrint');\r\n    const header = getID('header');\r\n    const form = getID('form');\r\n    \r\n    printBtn.onclick = ()=>{\r\n        header.classList.add('visually-hidden');\r\n        form.classList.add('visually-hidden');\r\n        printBtn.classList.add('visually-hidden');\r\n        print();\r\n    }\r\n};\n\n//# sourceURL=webpack://gerenciador-de-processos/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;