/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const app = window;\r\n\r\napp.onload = ()=>{\r\n\r\n    function getID(id){\r\n        let result = document.getElementById(id);\r\n        return result;\r\n    }\r\n\r\n    const btn = getID('sendBtn');\r\n\r\n    const requester = {\r\n        name: ()=>{\r\n            let rName = getID('rName');\r\n            return rName;\r\n        },\r\n        divName: ()=>{\r\n            let rDivName = getID('rNameDiv');\r\n            return rDivName;\r\n        },\r\n        cpf: ()=>{\r\n            let rDoc = getID('rDoc');\r\n            return rDoc;\r\n        },\r\n        divCpf: ()=>{\r\n            let rDivDoc = getID('rDocDiv');\r\n            return rDivDoc;\r\n        },\r\n        email: ()=>{\r\n            let rEmail = getID('rEmail');\r\n            return rEmail;\r\n        },\r\n        divEmail: ()=>{\r\n            let rDivEmail = getID('rEmailDiv');\r\n            return rDivEmail;\r\n        },\r\n        phone: ()=>{\r\n            let rPhone = getID('rPhone');\r\n            return rPhone;\r\n        },\r\n        divPhone: ()=>{\r\n            let rDivPhone = getID('rPhoneDiv');\r\n            return rDivPhone;\r\n        },\r\n        street: ()=>{\r\n            let rStreet = getID('rStreet');\r\n            return rStreet;\r\n        },\r\n        divStreet: ()=>{\r\n            let rDivStreet = getID('rStreetDiv');\r\n            return rDivStreet;\r\n        },\r\n        number: ()=>{\r\n            let rNumber = getID('rNumber');\r\n            return rNumber;\r\n        },\r\n        divNumber: ()=>{\r\n            let rDivNumber = getID('rNumberDiv');\r\n            return rDivNumber;\r\n        },\r\n        district: ()=>{\r\n            let rDistrict = getID('rDistrict');\r\n            return rDistrict;\r\n        },\r\n        divDistrict: ()=>{\r\n            let rDivDistrict = getID('rDistrictDiv');\r\n            return rDivDistrict;\r\n        },\r\n        city: ()=>{\r\n            let rCity = getID('rCity');\r\n            return rCity;\r\n        },\r\n        divCity: ()=>{\r\n            let rDivCity = getID('rCityDiv');\r\n            return rDivCity;\r\n        },\r\n        state: ()=>{\r\n            let reqState = getID('rState');\r\n            return reqState;\r\n        },\r\n        divState: ()=>{\r\n            let rDivState = getID('rStateDiv');\r\n            return rDivState;\r\n        },\r\n        postalCode: ()=>{\r\n            let rPostalCode = getID('rPostalCode');\r\n            return rPostalCode;\r\n        },\r\n        divPostalCode: ()=>{\r\n            let rDivPostalCode = getID('rPostalCodeDiv');\r\n            return rDivPostalCode;\r\n        }\r\n    }\r\n\r\n    const requested = {\r\n        name: ()=>{\r\n            let rdName = getID('rdName');\r\n            return rdName;\r\n        },\r\n        divName: ()=>{\r\n            let rdDivName = getID('rdNameDiv');\r\n            return rdDivName;\r\n        },\r\n        cpf: ()=>{\r\n            let rdDoc = getID('rdDoc');\r\n            return rdDoc;\r\n        },\r\n        divCpf: ()=>{\r\n            let rdDivCpf = getID('rdDocDiv');\r\n            return rdDivCpf;\r\n        },\r\n        email: ()=>{\r\n            let rdEmail = getID('rdEmail');\r\n            return rdEmail;\r\n        },\r\n        divEmail: ()=>{\r\n            let rdDivEmail = getID('rdEmailDiv');\r\n            return rdDivEmail;\r\n        },\r\n        phone: ()=>{\r\n            let rdPhone = getID('rdPhone');\r\n            return rdPhone;\r\n        },\r\n        divPhone: ()=>{\r\n            let rdDivPhone = getID('rdPhoneDiv');\r\n            return rdDivPhone;\r\n        },\r\n        street: ()=>{\r\n            let rdStreet = getID('rdStreet');\r\n            return rdStreet;\r\n        },\r\n        divStreet: ()=>{\r\n            let rdDivStreet = getID('rdStreetDiv');\r\n            return rdDivStreet;\r\n        },\r\n        number: ()=>{\r\n            let rdNumber = getID('rdNumber');\r\n            return rdNumber;\r\n        },\r\n        divNumber: ()=>{\r\n            let rdDivNumber = getID('rdNumberDiv');\r\n            return rdDivNumber;\r\n        },\r\n        district: ()=>{\r\n            let rdDistrict = getID('rdDistrict');\r\n            return rdDistrict;\r\n        },\r\n        divDistrict: ()=>{\r\n            let rdDivDistrict = getID('rdDistrictDiv');\r\n            return rdDivDistrict;\r\n        },\r\n        city: ()=>{\r\n            let rdCity = getID('rdCity');\r\n            return rdCity;\r\n        },\r\n        divCity: ()=>{\r\n            let rdDivCity = getID('rdCityDiv');\r\n            return rdDivCity;\r\n        },\r\n        state: ()=>{\r\n            let rdState = getID('rdState');\r\n            return rdState;\r\n        },\r\n        divState: ()=>{\r\n            let rdDivState = getID('rdStateDiv');\r\n            return rdDivState; \r\n        },\r\n        postalCode: ()=>{\r\n            let rdPostalCode = getID('rdPostalCode');\r\n            return rdPostalCode;\r\n        },\r\n        divPostalCode: ()=>{\r\n            let rdDivPostalCode = getID('rdPostalCodeDiv');\r\n            return rdDivPostalCode;\r\n        }\r\n    }\r\n\r\n    function validateData(){\r\n        // NOME\r\n        let rName = requester.name();\r\n        let rDivName = requester.divName();\r\n        if (rName.value !== ''){\r\n            rDivName.classList.remove('is-invalid');\r\n            rName.classList.remove('is-invalid');\r\n            console.log(rName.value);\r\n        }else {\r\n            rDivName.classList.add('is-invalid');\r\n            rName.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n        }\r\n        let rdName = requested.name();\r\n        let rdDivName = requested.divName();\r\n        if (rdName.value !== ''){\r\n            rdDivName.classList.remove('is-invalid');\r\n            rdName.classList.remove('is-invalid');\r\n            console.log(rdName.value);\r\n        }else {\r\n            rdDivName.classList.add('is-invalid');\r\n            rdName.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n        }\r\n\r\n        // CPF\r\n        let rCpf = requester.cpf();\r\n        let rDivCpf = requester.divCpf();\r\n        if (rCpf.value !== ''){\r\n            rCpf.classList.remove('is-invalid');\r\n            rDivCpf.classList.remove('is-invalid');\r\n            console.log(rCpf.value);\r\n        }else {\r\n            rDivCpf.classList.add('is-invalid');\r\n            rCpf.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n        }\r\n        let rdCpf = requested.cpf();\r\n        let rdDivCpf = requested.divCpf();\r\n        if (rdCpf.value !== ''){\r\n            rdCpf.classList.remove('is-invalid');\r\n            rdDivCpf.classList.remove('is-invalid');\r\n            console.log(rCpf.value);\r\n        }else {\r\n            rdDivCpf.classList.add('is-invalid');\r\n            rdCpf.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n        }\r\n\r\n        // EMAIL\r\n        let rEmail = requester.email();\r\n        let rDivEmail = requester.divEmail();\r\n        if (rEmail.value !== ''){\r\n            rEmail.classList.remove('is-invalid');\r\n            rDivEmail.classList.remove('is-invalid');\r\n            console.log(rEmail.value);\r\n        }else {\r\n            rDivEmail.classList.add('is-invalid');\r\n            rEmail.classList.add('is-invalid');\r\n            app.scrollTo(30, 30);\r\n        }\r\n        let rdEmail = requested.email();\r\n        let rdDivEmail = requested.divEmail();\r\n        if (rdEmail.value !== ''){\r\n            rdEmail.classList.remove('is-invalid');\r\n            rdDivEmail.classList.remove('is-invalid');\r\n            console.log(rEmail.value);\r\n        }else {\r\n            rdDivEmail.classList.add('is-invalid');\r\n            rdEmail.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n        }\r\n\r\n        // TELEFONE\r\n        let rPhone = requester.phone();\r\n        let rDivPhone = requester.divPhone();\r\n        if (rPhone.value !== ''){\r\n            rPhone.classList.remove('is-invalid');\r\n            rDivPhone.classList.remove('is-invalid');\r\n            console.log(rPhone.value);\r\n        }else {\r\n            rDivPhone.classList.add('is-invalid');\r\n            rPhone.classList.add('is-invalid');\r\n            app.scrollTo(180, 180);\r\n        }\r\n        let rdPhone = requested.phone();\r\n        let rdDivPhone = requested.divPhone();\r\n        if (rdPhone.value !== ''){\r\n            rdPhone.classList.remove('is-invalid');\r\n            rdDivPhone.classList.remove('is-invalid');\r\n            console.log(rdPhone.value);\r\n        }else {\r\n            rdDivPhone.classList.add('is-invalid');\r\n            rdPhone.classList.add('is-invalid');\r\n            app.scrollTo(1400, 1400);\r\n        }\r\n\r\n        //RUA\r\n        let rStreet = requester.street();\r\n        let rDivStreet = requester.divStreet();\r\n        if (rStreet.value !== ''){\r\n            rStreet.classList.remove('is-invalid');\r\n            rDivStreet.classList.remove('is-invalid');\r\n            console.log(rStreet.value);\r\n        }else {\r\n            rDivStreet.classList.add('is-invalid');\r\n            rStreet.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n        }\r\n        let rdStreet = requested.street();\r\n        let rdDivStreet = requested.divStreet();\r\n        if (rdStreet.value !== ''){\r\n            rdStreet.classList.remove('is-invalid');\r\n            rdDivStreet.classList.remove('is-invalid');\r\n            console.log(rdStreet.value);\r\n        }else {\r\n            rdDivStreet.classList.add('is-invalid');\r\n            rdStreet.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n        }\r\n\r\n        // NUMERO\r\n        let rNumber = requester.number();\r\n        let rDivNumber = requester.divNumber();\r\n        if (rNumber.value !== ''){\r\n            rNumber.classList.remove('is-invalid');\r\n            rDivNumber.classList.remove('is-invalid');\r\n            console.log(rNumber.value);\r\n        }else {\r\n            rDivNumber.classList.add('is-invalid');\r\n            rNumber.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n        }\r\n        let rdNumber = requested.number();\r\n        let rdDivNumber = requested.divNumber();\r\n        if (rdNumber.value !== ''){\r\n            rdNumber.classList.remove('is-invalid');\r\n            rdDivNumber.classList.remove('is-invalid');\r\n            console.log(rdNumber.value);\r\n        }else {\r\n            rdDivNumber.classList.add('is-invalid');\r\n            rdNumber.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n        }\r\n\r\n        // BAIRRO\r\n        let rDistrict = requester.district();\r\n        let rDivDistrict = requester.divDistrict();\r\n        if (rDistrict.value !== ''){\r\n            rDistrict.classList.remove('is-invalid');\r\n            rDivDistrict.classList.remove('is-invalid');\r\n            console.log(rDistrict.value);\r\n        }else {\r\n            rDivDistrict.classList.add('is-invalid');\r\n            rDistrict.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n        }\r\n        let rdDistrict = requested.district();\r\n        let rdDivDistrict = requested.divDistrict();\r\n        if (rdDistrict.value !== ''){\r\n            rdDistrict.classList.remove('is-invalid');\r\n            rdDivDistrict.classList.remove('is-invalid');\r\n            console.log(rdDistrict.value);\r\n        }else {\r\n            rdDivDistrict.classList.add('is-invalid');\r\n            rdDistrict.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n        }\r\n\r\n        // CIDADE\r\n        let rCity = requester.city();\r\n        let rDivCity = requester.divCity();\r\n        if (rCity.value !== ''){\r\n            rCity.classList.remove('is-invalid');\r\n            rDivCity.classList.remove('is-invalid');\r\n            console.log(rCity.value);\r\n        }else {\r\n            rDivCity.classList.add('is-invalid');\r\n            rCity.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n        }\r\n        let rdCity = requested.city();\r\n        let rdDivCity = requested.divCity();\r\n        if (rdCity.value !== ''){\r\n            rdCity.classList.remove('is-invalid');\r\n            rdDivCity.classList.remove('is-invalid');\r\n            console.log(rdCity.value);\r\n        }else {\r\n            rdDivCity.classList.add('is-invalid');\r\n            rdCity.classList.add('is-invalid');\r\n            app.scrollTo(1900, 1900);\r\n        }\r\n\r\n        // CEP\r\n        let rPostalCode = requester.postalCode();\r\n        let rDivPostalCode = requester.divPostalCode();\r\n        if (rPostalCode.value !== ''){\r\n            rPostalCode.classList.remove('is-invalid');\r\n            rDivPostalCode.classList.remove('is-invalid');\r\n            console.log(rPostalCode.value);\r\n        }else {\r\n            rDivPostalCode.classList.add('is-invalid');\r\n            rPostalCode.classList.add('is-invalid');\r\n            app.scrollTo(750, 750);\r\n        }\r\n        let rdPostalCode = requested.postalCode();\r\n        let rdDivPostalCode = requested.divPostalCode();\r\n        if (rdPostalCode.value !== ''){\r\n            rdPostalCode.classList.remove('is-invalid');\r\n            rdDivPostalCode.classList.remove('is-invalid');\r\n            console.log(rdPostalCode.value);\r\n        }else {\r\n            rdDivPostalCode.classList.add('is-invalid');\r\n            rdPostalCode.classList.add('is-invalid');\r\n            app.scrollTo(2200, 2200);\r\n        }\r\n\r\n    }\r\n\r\n    btn.onclick = ()=>{\r\n        validateData();\r\n    }\r\n};\n\n//# sourceURL=webpack://gerenciador-de-processos/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;