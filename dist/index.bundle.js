/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/index.js":
/*!******************************!*\
  !*** ./src/scripts/index.js ***!
  \******************************/
/***/ (() => {

eval("\r\n\r\nconst app = window;\r\n\r\napp.onload = ()=>{\r\n\r\n    function getID(id){\r\n        let result = document.getElementById(id);\r\n        return result;\r\n    }\r\n\r\n    const btn = getID('sendBtn');\r\n\r\n    const requester = {\r\n        name: ()=>{\r\n            let element = getID('rName');\r\n            return element;\r\n        },\r\n        invalidName: ()=>{\r\n            let element = getID('rInvalidName');\r\n            return element;\r\n        },\r\n        document: ()=>{\r\n            let element = getID('rDoc');\r\n            return element;\r\n        },\r\n        invalidDocument: ()=>{\r\n            let element = getID('rInvalidDocument');\r\n            return element;\r\n        },\r\n        email: ()=>{\r\n            let element = getID('rEmail');\r\n            return element;\r\n        },\r\n        invalidEmail: ()=>{\r\n            let element = getID('rInvalidEmail');\r\n            return element;\r\n        },\r\n        phone: ()=>{\r\n            let element = getID('rPhone');\r\n            return element;\r\n        },\r\n        invalidPhone: ()=>{\r\n            let element = getID('rInvalidPhone');\r\n            return element;\r\n        },\r\n        street: ()=>{\r\n            let element = getID('rStreet');\r\n            return element;\r\n        },\r\n        invalidStreet: ()=>{\r\n            let element = getID('rInvalidStreet');\r\n            return element;\r\n        },\r\n        number: ()=>{\r\n            let element = getID('rNumber');\r\n            return element;\r\n        },\r\n        invalidNumber: ()=>{\r\n            let element = getID('rInvalidNumber');\r\n            return element;\r\n        },\r\n        district: ()=>{\r\n            let element = getID('rDistrict');\r\n            return element;\r\n        },\r\n        invalidDistrict: ()=>{\r\n            let element = getID('rInvalidDistrict');\r\n            return element;\r\n        },\r\n        city: ()=>{\r\n            let element = getID('rCity');\r\n            return element;\r\n        },\r\n        invalidCity: ()=>{\r\n            let element = getID('rInvalidCity');\r\n            return element;\r\n        },\r\n        state: ()=>{\r\n            let element = getID('rState');\r\n            return element;\r\n        },\r\n        invalidState: ()=>{\r\n            let element = getID('rInvalidState');\r\n            return element;\r\n        },\r\n        postalCode: ()=>{\r\n            let element = getID('rPostalCode');\r\n            return element;\r\n        },\r\n        invalidPostalCode: ()=>{\r\n            let element = getID('rInvalidPostalCode');\r\n            return element;\r\n        },\r\n        report: ()=>{\r\n            let element = getID('reportCase');\r\n            return element;\r\n        },\r\n        invalidReport: ()=>{\r\n            let element = getID('invalidReport');\r\n            return element;\r\n        },\r\n        request: ()=>{\r\n            let element = getID('request');\r\n            return element;\r\n        },\r\n        invalidRequest: ()=>{\r\n            let element = getID('invalidRequest');\r\n            return element;\r\n        },\r\n        value: ()=>{\r\n            let element = getID('value');\r\n            return element;\r\n        },\r\n        invalidValue: ()=>{\r\n            let element = getID('invalidValue');\r\n            return element;\r\n        }\r\n    }\r\n\r\n    const requested = {\r\n        name: ()=>{\r\n            let element = getID('rdName');\r\n            return element;\r\n        },\r\n        invalidName: ()=>{\r\n            let element = getID('rdInvalidName');\r\n            return element;\r\n        },\r\n        document: ()=>{\r\n            let element = getID('rdDoc');\r\n            return element;\r\n        },\r\n        invalidDocument: ()=>{\r\n            let element = getID('rdInvalidDocument');\r\n            return element;\r\n        },\r\n        email: ()=>{\r\n            let element = getID('rdEmail');\r\n            return element;\r\n        },\r\n        invalidEmail: ()=>{\r\n            let element = getID('rdInvalidEmail');\r\n            return element;\r\n        },\r\n        phone: ()=>{\r\n            let element = getID('rdPhone');\r\n            return element;\r\n        },\r\n        invalidPhone: ()=>{\r\n            let element = getID('rdInvalidPhone');\r\n            return element;\r\n        },\r\n        street: ()=>{\r\n            let element = getID('rdStreet');\r\n            return element;\r\n        },\r\n        invalidStreet: ()=>{\r\n            let element = getID('rdInvalidStreet');\r\n            return element;\r\n        },\r\n        number: ()=>{\r\n            let element = getID('rdNumber');\r\n            return element;\r\n        },\r\n        invalidNumber: ()=>{\r\n            let element = getID('rdInvalidNumber');\r\n            return element;\r\n        },\r\n        district: ()=>{\r\n            let element = getID('rdDistrict');\r\n            return element;\r\n        },\r\n        invalidDistrict: ()=>{\r\n            let element = getID('rdInvalidDistrict');\r\n            return element;\r\n        },\r\n        city: ()=>{\r\n            let element = getID('rdCity');\r\n            return element;\r\n        },\r\n        invalidCity: ()=>{\r\n            let element = getID('rdInvalidCity');\r\n            return element;\r\n        },\r\n        state: ()=>{\r\n            let element = getID('rdState');\r\n            return element;\r\n        },\r\n        invalidState: ()=>{\r\n            let element = getID('rdInvalidState');\r\n            return element; \r\n        },\r\n        postalCode: ()=>{\r\n            let element = getID('rdPostalCode');\r\n            return element;\r\n        },\r\n        invalidPostalCode: ()=>{\r\n            let element = getID('rdInvalidPostalCode');\r\n            return element;\r\n        }\r\n    }\r\n\r\n    const targets = {\r\n        requesterName: ()=>{\r\n            let requesterName = getID('requesterNameTarget');\r\n            return requesterName;\r\n        },\r\n        requesterAddress: ()=>{\r\n            let requesterAddress = getID('requesterAddressTarget');\r\n            return requesterAddress;\r\n        },\r\n        requesterDocument: ()=>{\r\n            let requesterDocument = getID('requesterDocTarget');\r\n            return requesterDocument;\r\n        },\r\n        requesterEmail: ()=>{\r\n            let requesterEmail = getID('requesterEmailTarget');\r\n            return requesterEmail;\r\n        },\r\n        requesterPhone: ()=>{\r\n            let requesterPhone = getID('requesterPhoneTarget');\r\n            return requesterPhone;\r\n        },\r\n        requiredName: ()=>{\r\n            let requiredName = getID('requiredNameTarget');\r\n            return requiredName;\r\n        },\r\n        requiredAddress: ()=>{\r\n            let requiredAddress = getID('requiredAddressTarget');\r\n            return requiredAddress;\r\n        },\r\n        requiredDocument: ()=>{\r\n            let requiredDocument = getID('requiredDocTarget');\r\n            return requiredDocument;\r\n        },\r\n        requiredEmail: ()=>{\r\n            let requiredEmail = getID('requiredEmailTarget');\r\n            return requiredEmail;\r\n        },\r\n        requiredPhone: ()=>{\r\n            let requiredPhone = getID('requiredPhoneTarget');\r\n            return requiredPhone;\r\n        },\r\n        reportTarget: ()=>{\r\n            let reportTarget = getID('reportTarget');\r\n            return reportTarget;\r\n        },\r\n        requestTextTarget: ()=>{\r\n            let requestTextTarget = getID('requestTextTarget');\r\n            return requestTextTarget;\r\n        },\r\n        requestsTarget: ()=>{\r\n            let requestsTarget = getID('requestsTarget');\r\n            return requestsTarget;\r\n            // append <li> tag\r\n        },\r\n        valueTarget: ()=>{\r\n            let valueTarget = getID('valueTarget');\r\n            return valueTarget;\r\n        },\r\n        signerName: ()=>{\r\n            let signerName = getID('signerNameTarget');\r\n            return signerName;\r\n        },\r\n        signerDocument: ()=>{\r\n            let signerDocument = getID('signerDocument');\r\n            return signerDocument;\r\n        },\r\n        dateTarget: ()=>{\r\n            let dateTarget = getID('dateTarget');\r\n            return dateTarget;\r\n        },\r\n        doc2Name: ()=>{\r\n            let element = getID('doc2NameTarget');\r\n            return element;\r\n        },\r\n        doc2Document: ()=>{\r\n            let element = getID('doc2DocumentTarget');\r\n            return element;\r\n        },\r\n        doc2Street: ()=>{\r\n            let element = getID('doc2StreetTarget');\r\n            return element;\r\n        },\r\n        doc2Number: ()=>{\r\n            let element = getID('doc2NumberTarget');\r\n            return element;\r\n        },\r\n        doc2District: ()=>{\r\n            let element = getID('doc2DistrictTarget');\r\n            return element;\r\n        },\r\n        doc2CityState: ()=>{\r\n            let element = getID('doc2CityStateTarget');\r\n            return element;\r\n        },\r\n        doc2PostalCode: ()=>{\r\n            let element = getID('doc2PostalCodeTarget');\r\n            return element;\r\n        },\r\n        doc2Phone: ()=>{\r\n            let element = getID('doc2PhoneTarget');\r\n            return element;\r\n        },\r\n        doc2Email: ()=>{\r\n            let element = getID('doc2EmailTarget');\r\n            return element;\r\n        },\r\n        doc2Date: ()=>{\r\n            let element = getID('doc2DateTarget');\r\n            return element;\r\n        },\r\n        doc2Signer: ()=>{\r\n            let element = getID('doc2SignerTarget');\r\n            return element;\r\n        }\r\n    }\r\n\r\n    function validateValues(){\r\n        let isValid = true;\r\n\r\n        // NOME\r\n        let rName = requester.name();\r\n        let rInvalidName = requester.invalidName();\r\n        if (rName.value !== ''){\r\n            rInvalidName.classList.add('hidden');\r\n        }else {\r\n            rInvalidName.classList.remove('hidden');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdName = requested.name();\r\n        let rdInvalidName = requested.invalidName();\r\n        if (rdName.value !== ''){\r\n            rdInvalidName.classList.add('hidden');\r\n        }else {\r\n            rdInvalidName.classList.remove('hidden');\r\n            app.scrollTo(1800, 1800);\r\n            isValid = false;\r\n        }\r\n\r\n        // CPF\r\n        let rDocument = requester.document();\r\n        let rInvalidDocument = requester.invalidDocument();\r\n        if (rDocument.value !== ''){\r\n            rInvalidDocument.classList.add('hidden');\r\n        }else {\r\n            rInvalidDocument.classList.remove('hidden');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdDocument = requested.document();\r\n        let rdInvalidDocument = requested.invalidDocument();\r\n        if (rdDocument.value !== ''){\r\n            rdInvalidDocument.classList.add('hidden');\r\n        }else {\r\n            rdInvalidDocument.classList.remove('hidden');            \r\n            app.scrollTo(1800, 1800);\r\n            isValid = false;\r\n        }\r\n\r\n        // EMAIL\r\n        let rEmail = requester.email();\r\n        let rInvalidEmail = requester.invalidEmail();\r\n        if (rEmail.value !== ''){\r\n            rInvalidEmail.classList.add('hidden');\r\n        }else {\r\n            rInvalidEmail.classList.remove('hidden');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdEmail = requested.email();\r\n        let rdInvalidEmail = requested.invalidEmail();\r\n        if (rdEmail.value !== ''){\r\n            rdInvalidEmail.classList.add('hidden');\r\n        }else {\r\n            rdInvalidEmail.classList.remove('hidden');\r\n            app.scrollTo(1800, 1800);\r\n            isValid = false;\r\n        }\r\n\r\n        // TELEFONE\r\n        let rPhone = requester.phone();\r\n        let rInvalidPhone = requester.invalidPhone();\r\n        if (rPhone.value !== ''){\r\n            rInvalidPhone.classList.add('hidden');\r\n        }else {\r\n            rInvalidPhone.classList.remove('hidden');\r\n            app.scrollTo(30, 30);\r\n            isValid = false;\r\n        }\r\n        let rdPhone = requested.phone();\r\n        let rdInvalidPhone = requested.invalidPhone();\r\n        if (rdPhone.value !== ''){\r\n            rdInvalidPhone.classList.add('hidden');\r\n        }else {\r\n            rdInvalidPhone.classList.remove('hidden');\r\n            app.scrollTo(1800, 1800);\r\n            isValid = false;\r\n        }\r\n\r\n        //RUA\r\n        let rStreet = requester.street();\r\n        let rInvalidStreet = requester.invalidStreet();\r\n        if (rStreet.value !== ''){\r\n            rInvalidStreet.classList.add('hidden');\r\n        }else {\r\n            rInvalidStreet.classList.remove('hidden');\r\n            app.scrollTo(550, 550);\r\n            isValid = false;\r\n        }\r\n        let rdStreet = requested.street();\r\n        let rdInvalidStreet = requested.invalidStreet();\r\n        if (rdStreet.value !== ''){\r\n            rdInvalidStreet.classList.add('hidden');\r\n        }else {\r\n            rdInvalidStreet.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // NUMERO\r\n        let rNumber = requester.number();\r\n        let rInvalidNumber = requester.invalidNumber();\r\n        if (rNumber.value !== ''){\r\n            rInvalidNumber.classList.add('hidden');\r\n        }else {\r\n            rInvalidNumber.classList.remove('hidden');\r\n            app.scrollTo(550, 550);\r\n            isValid = false;\r\n        }\r\n        let rdNumber = requested.number();\r\n        let rdInvalidNumber = requested.invalidNumber();\r\n        if (rdNumber.value !== ''){\r\n            rdInvalidNumber.classList.add('hidden');\r\n        }else {\r\n            rdInvalidNumber.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // BAIRRO\r\n        let rDistrict = requester.district();\r\n        let rInvalidDistrict = requester.invalidDistrict();\r\n        if (rDistrict.value !== ''){\r\n            rInvalidDistrict.classList.add('hidden');\r\n        }else {\r\n            rInvalidDistrict.classList.remove('hidden');\r\n            app.scrollTo(550, 550);\r\n            isValid = false;\r\n        }\r\n        let rdDistrict = requested.district();\r\n        let rdInvalidDistrict = requested.invalidDistrict();\r\n        if (rdDistrict.value !== ''){\r\n            rdInvalidDistrict.classList.add('hidden');\r\n        }else {\r\n            rdInvalidDistrict.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // CIDADE\r\n        let rCity = requester.city();\r\n        let rInvalidCity = requester.invalidCity();\r\n        if (rCity.value !== ''){\r\n            rInvalidCity.classList.add('hidden');\r\n        }else {\r\n            rInvalidCity.classList.remove('hidden');\r\n            app.scrollTo(850, 850);\r\n            isValid = false;\r\n        }\r\n        let rdCity = requested.city();\r\n        let rdInvalidCity = requested.invalidCity();\r\n        if (rdCity.value !== ''){\r\n            rdInvalidCity.classList.add('hidden');\r\n        }else {\r\n            rdInvalidCity.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // ESTADO\r\n        let rState = requester.state();\r\n        let rInvalidState = requester.invalidState();\r\n        if (rState.value !== '0'){\r\n            rInvalidState.classList.add('hidden');\r\n        }else {\r\n            rInvalidState.classList.remove('hidden');\r\n            app.scrollTo(850, 850);\r\n            isValid = false;\r\n        }\r\n        let rdState = requested.state();\r\n        let rdInvalidState = requested.invalidState();\r\n        if (rdState.value !== '0'){\r\n            rdInvalidState.classList.add('hidden');\r\n        }else {\r\n            rdInvalidState.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // CEP\r\n        let rPostalCode = requester.postalCode();\r\n        let rInvalidPostalCode = requester.invalidPostalCode();\r\n        if (rPostalCode.value !== ''){\r\n            rInvalidPostalCode.classList.add('hidden');\r\n        }else {\r\n            rInvalidPostalCode.classList.remove('hidden');\r\n            app.scrollTo(850, 850);\r\n            isValid = false;\r\n        }\r\n        let rdPostalCode = requested.postalCode();\r\n        let rdInvalidPostalCode = requested.invalidPostalCode();\r\n        if (rdPostalCode.value !== ''){\r\n            rdInvalidPostalCode.classList.add('hidden');\r\n        }else {\r\n            rdInvalidPostalCode.classList.remove('hidden');\r\n            app.scrollTo(2350, 2350);\r\n            isValid = false;\r\n        }\r\n\r\n        // RELATO DO CASO\r\n        let report = requester.report();\r\n        let invalidReport = requester.invalidReport();\r\n        if (report.value !== ''){\r\n            invalidReport.classList.add('hidden');\r\n        }else {\r\n            invalidReport.classList.remove('hidden');\r\n            app.scrollTo(900, 900);\r\n            isValid = false;\r\n        }\r\n\r\n        // DOS PEDIDOS\r\n        let request = requester.request();\r\n        let invalidRequest = requester.invalidRequest();\r\n        if (request.value !== ''){\r\n            invalidRequest.classList.add('hidden');\r\n        }else {\r\n            invalidRequest.classList.remove('hidden');\r\n            app.scrollTo(1300, 1300);\r\n            isValid = false;\r\n        }\r\n\r\n        // VALOR DA CAUSA\r\n        let value = requester.value();\r\n        let invalidValue = requester.invalidValue();\r\n        if (value.value !== ''){\r\n            invalidValue.classList.add('hidden');\r\n        }else {\r\n            invalidValue.classList.remove('hidden');\r\n            app.scrollTo(1500, 1500);\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    btn.onclick = ()=>{\r\n        validateValues();\r\n        if (validateValues()){\r\n            \r\n            // RECLAMANTE\r\n            let requesterNameTarget = targets.requesterName();\r\n            let requesterNameValue = requester.name().value;\r\n            requesterNameTarget.innerText = requesterNameValue.toUpperCase();\r\n            \r\n            // ENDEREÇO\r\n            let requesterStreet = requester.street().value;\r\n            let requesterNumber = requester.number().value;\r\n            let requesterCity = requester.city().value;\r\n            let requesterState = requester.state().value;\r\n            let requesterPostalCode = requester.postalCode().value;\r\n            let requesterAddress = 'R: '+ requesterStreet.toUpperCase()+' N: '+requesterNumber.toUpperCase()+' '+requesterCity.toUpperCase()+'/'+requesterState+' CEP: '+requesterPostalCode;\r\n            let requesterAddressTarget = targets.requesterAddress();\r\n            requesterAddressTarget.innerText = requesterAddress;\r\n\r\n            // CPF/CNPJ\r\n            let requesterDocument = requester.document().value;\r\n            let requesterDocumentTarget = targets.requesterDocument();\r\n            requesterDocumentTarget.innerText = requesterDocument;\r\n\r\n            // EMAIL\r\n            let requesterEmail = requester.email().value;\r\n            let requesterEmailTarget = targets.requesterEmail();\r\n            requesterEmailTarget.innerText = requesterEmail;\r\n\r\n            // WHATSAPP TELEFONE\r\n            let requesterPhone = requester.phone().value;\r\n            let requesterPhoneTarget = targets.requesterPhone();\r\n            requesterPhoneTarget.innerText = requesterPhone;\r\n\r\n            // RECLAMADO\r\n            let requiredName = requested.name().value;\r\n            let requiredNameTarget = targets.requiredName();\r\n            requiredNameTarget.innerText = requiredName.toUpperCase();\r\n\r\n            // ENDEREÇO\r\n            let requiredStreet = requested.street().value;\r\n            let requiredNumber = requested.number().value;\r\n            let requiredCity = requested.city().value;\r\n            let requiredState = requested.state().value;\r\n            let requiredPostalCode = requested.postalCode().value;\r\n            let requiredAddress = 'R: '+requiredStreet.toUpperCase()+' N: '+requiredNumber+' '+requiredCity.toUpperCase()+'/'+requiredState+' CEP: '+requiredPostalCode;\r\n            let requiredAddressTarget = targets.requiredAddress();\r\n            requiredAddressTarget.innerText = requiredAddress;\r\n\r\n            // CPF/CNPJ\r\n            let requiredDocument = requested.document().value;\r\n            let requiredDocumentTarget = targets.requiredDocument();\r\n            requiredDocumentTarget.innerText = requiredDocument;\r\n\r\n            // EMAIL\r\n            let requiredEmail = requested.email().value;\r\n            let requiredEmailTarget = targets.requiredEmail();\r\n            requiredEmailTarget.innerText = requiredEmail;\r\n\r\n            // WHATSAPP TELEFONE\r\n            let requiredPhone = requested.phone().value;\r\n            let requiredPhoneTarget = targets.requiredPhone();\r\n            requiredPhoneTarget.innerText = requiredPhone;\r\n\r\n            // DOS FATOS\r\n            let report = requester.report().value;\r\n            let reportTarget = targets.reportTarget();\r\n            reportTarget.innerText = report;\r\n\r\n            // DOS PEDIDOS\r\n            let request = requester.request().value;\r\n            let requestTarget = targets.requestTextTarget();\r\n            requestTarget.innerText = request;\r\n\r\n            // VALOR DA CAUSA\r\n            let causeValue = requester.value().value;\r\n            let causeValueTarget = targets.valueTarget();\r\n            causeValueTarget.innerText = causeValue;\r\n\r\n            // DATA\r\n            let date = new Date();\r\n            let day = date.getDate();\r\n            let month = date.getMonth();\r\n            let year = date.getFullYear();\r\n            let min = date.getMinutes();\r\n            let hours = date.getHours();\r\n            let months = [\r\n                'Janeiro',\r\n                'Fevereiro',\r\n                'Março',\r\n                'Abril',\r\n                'Maio',\r\n                'Junho',\r\n                'Julho',\r\n                'Agosto',\r\n                'Setembro',\r\n                'Outubro',\r\n                'Novembro',\r\n                'Dezembro'\r\n            ];\r\n            let monthName = months[month];\r\n            let formatedMonth = month < 10 ? '0' + month : month;\r\n            let formatedDay = day < 10 ? '0' + day : day;\r\n            let todayDate = formatedDay+'/'+formatedMonth+'/'+year;\r\n            let today = `Itapoá (SC), ${formatedDay} de ${monthName} de ${year}.`;\r\n            let dateTarget = targets.dateTarget();\r\n            dateTarget.innerText = today;\r\n\r\n            let headerDateTarget = getID('headerDateTarget');\r\n            let doc2HeaderDateTarget = getID('doc2HeaderDateTarget');\r\n            headerDateTarget.innerText = todayDate;\r\n            doc2HeaderDateTarget.innerText = todayDate;\r\n\r\n            let headerTimeTarget = getID('headerTimeTarget');\r\n            let doc2HeaderTimeTarget = getID('doc2HeaderTimeTarget');\r\n            let correctHours = hours < 10 ? '0' + hours : hours;\r\n            let correctMin = min < 10 ? '0' + min : min;\r\n            let now = correctHours+':'+correctMin;\r\n            headerTimeTarget.innerText = now;\r\n            doc2HeaderTimeTarget.innerText = now;\r\n\r\n            // ASSINANTE\r\n            let signerName = requester.name().value;\r\n            let signerDocument = 'CPF/CNPJ: ' +  requester.document().value;\r\n            let signerNameTarget = targets.signerName();\r\n            let signerDocumentTarget = targets.signerDocument();\r\n\r\n            signerNameTarget.innerText = signerName.toUpperCase();\r\n            signerDocumentTarget.innerText = signerDocument;\r\n\r\n            // TERMO DE ADESÃO\r\n            let termName = requester.name().value;\r\n            let termDoc = requester.document().value;\r\n            let termStreet = requester.street().value;\r\n            let termNumber = requester.number().value;\r\n            let termDistrict = requester.district().value;\r\n            let termCity = requester.city().value;\r\n            let termState = requester.state().value;\r\n            let termCityState = termCity + '/' + termState;\r\n            let termPostalCode = requester.postalCode().value;\r\n            let termPhone = requester.phone().value;\r\n            let termEmail = requester.email().value;\r\n\r\n            let termNameTarget = targets.doc2Name();\r\n            let termDocTarget = targets.doc2Document();\r\n            let termStreetTarget = targets.doc2Street();\r\n            let termNumberTarget = targets.doc2Number();\r\n            let termDistrictTarget = targets.doc2District();\r\n            let termCityStateTarget = targets.doc2CityState();\r\n            let termPostalCodeTarget = targets.doc2PostalCode();\r\n            let termPhoneTarget = targets.doc2Phone();\r\n            let termEmailTarget = targets.doc2Email();\r\n            let termDateTarget = targets.doc2Date();\r\n            let termSignerTarget = targets.doc2Signer();\r\n\r\n            termNameTarget.innerText = termName.toUpperCase();\r\n            termDocTarget.innerText = termDoc;\r\n            termStreetTarget.innerText = termStreet.toUpperCase();\r\n            termNumberTarget.innerText = termNumber;\r\n            termDistrictTarget.innerText = termDistrict.toUpperCase();\r\n            termCityStateTarget.innerText = termCityState.toUpperCase();\r\n            termPostalCodeTarget.innerText = termPostalCode;\r\n            termPhoneTarget.innerText = termPhone;\r\n            termEmailTarget.innerText = termEmail;\r\n            termDateTarget.innerText = today;\r\n            termSignerTarget.innerText = termName.toUpperCase();\r\n            printBtn.style.display = 'block';\r\n\r\n            alert('Seu documento foi gerado com sucesso. Clique em imprimir para realizar o download!');\r\n        }\r\n    }\r\n    \r\n    const printBtn = getID('printBtn');\r\n    const pageBody = getID('body');\r\n    const pageHeader = getID('header');\r\n    const doc1 = getID('doc1');\r\n    const doc2 = getID('doc2');\r\n    printBtn.onclick = ()=>{\r\n        doc1.style.display = 'flex';\r\n        doc2.style.display = 'flex';\r\n        pageBody.style.display = 'none';\r\n        pageHeader.style.display = 'none';\r\n        html2pdf(doc1).set({\r\n            mode: 'avoid-all',\r\n            before: '.before'\r\n        });\r\n    }\r\n    \r\n    \r\n};\n\n//# sourceURL=webpack://gerenciador-de-processos/./src/scripts/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/index.js"]();
/******/ 	
/******/ })()
;